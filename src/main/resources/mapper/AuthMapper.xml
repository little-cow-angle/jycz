<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gene.recombine.stuhubsys.mapper.AuthMapper">

        <update id="setInfo">
            <choose>
                <when test="isAdmin">
                    <!-- 更新教师表 -->
                    UPDATE teacher
                    <set>
                        <if test="entryDate != null">entry_date = #{entryDate},</if>
                        <if test="sex != null">sex = #{sex},</if>
                        <if test="birth != null">birthday = #{birth},</if>
                        <if test="phone != null">phone = #{phone},</if>
                        <if test="email != null">email = #{email},</if>
                        <if test="collegeId != null">
                            college_id = #{collegeId},
                        </if>
                        <if test="workAddress != null">work_address = #{workAddress},</if>
                        <if test="position != null">position = #{position},</if>
                    </set>
                    WHERE teacher_id = #{id}
                </when>
                <otherwise>
                    <!-- 更新学生表 -->
                    UPDATE student
                    <set>
                        <if test="entryDate != null">entry_date = #{entryDate},</if>
                        <if test="sex != null">sex = #{sex},</if>
                        <if test="birth != null">birth = #{birth},</if>
                        <if test="gaoKaoId != null">gao_kao_id = #{gaoKaoId},</if>
                        <if test="gaoKao != null">gao_kao = #{gaoKao},</if>
                        <if test="phone != null">phone = #{phone},</if>
                        <if test="email != null">email = #{email},</if>
                        <if test="major != null">
                            major_id = (SELECT major_id FROM major WHERE major_name = #{major}),
                        </if>
                        <if test="collegeId != null">
                            college_id = #{collegeId},
                        </if>
                    </set>
                    WHERE student_id = #{id}
                </otherwise>
            </choose>

    </update>

    <select id="login" resultType="java.util.Map">
        SELECT
            CASE WHEN EXISTS (
                SELECT 1 FROM student
                WHERE student_id = #{ID} AND password = #{password}
            ) THEN (
                SELECT CONCAT(student_id, ':', student_name, ':0')
                FROM student
                WHERE student_id = #{ID} AND password = #{password}
                LIMIT 1
            ) END AS student_info,

            CASE WHEN EXISTS (
                SELECT 1 FROM teacher
                WHERE teacher_id = #{ID} AND password = #{password}
            ) THEN (
                SELECT CONCAT(teacher_id, ':', name, ':1')
                FROM teacher
                WHERE teacher_id = #{ID} AND password = #{password}
                LIMIT 1
            ) END AS teacher_info
    </select>

    <select id="getInfo" resultType="gene.recombine.stuhubsys.dto.UserDTO">
        SELECT
            result.*
        FROM (
                 -- 学生查询
                 SELECT
                     'student' AS type,
                     s.student_id AS username,
                     s.entry_date AS entryDate,
                     s.student_name AS name,
                     s.sex AS sex,
                     s.birth,
                     s.gao_kao_id AS gaoKaoId,
                     s.gao_kao AS gaoKao,
                     s.political_identity AS politicalIdentity,
                     s.student_address AS address,
                     s.phone,
                     s.nationality,
                     s.city_countryside,
                     c.name AS collegeName,
                     NULL AS position,
                     NULL AS workAddress,
                     NULL AS email
                 FROM
                     student s
                         LEFT JOIN
                     college c ON c.id = s.college_id
                 WHERE
                     s.student_id = #{id}
                   AND s.student_name = #{name}

                 UNION ALL

                 -- 教师查询
                 SELECT
                     'teacher' AS type,
                     s.teacher_id AS username,
                     s.entry_date AS entryDate,
                     s.name AS name,
                     s.sex AS sex,
                     s.birthday AS birth,
                     NULL AS gaoKaoId,
                     NULL AS gaoKao,
                     NULL AS politicalIdentity,
                     NULL AS address,
                     s.phone,
                     NULL AS nationality,
                     NULL AS city_countryside,
                     c.name AS collegeName,
                     s.position,
                     s.work_address AS workAddress,
                     s.email
                 FROM
                     teacher s
                         LEFT JOIN
                     college c ON c.id = s.college_id
                 WHERE
                     s.teacher_id = #{id}
                   AND s.name = #{name}
             ) AS result
        LIMIT 1;
    </select>
</mapper>
